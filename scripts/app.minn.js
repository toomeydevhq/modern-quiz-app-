const elements={loadingScreen:document.getElementById("loading-screen"),categoryScreen:document.getElementById("category-screen"),quizScreen:document.getElementById("quiz-screen"),resultsScreen:document.getElementById("results-screen"),reviewScreen:document.getElementById("review-screen"),questionNumber:document.getElementById("question-number"),categoryName:document.getElementById("category-name"),timerDisplay:document.getElementById("time"),progressBar:document.getElementById("progress-bar"),questionText:document.getElementById("question"),optionsContainer:document.getElementById("options"),nextButton:document.getElementById("next-btn"),hintButton:document.getElementById("hint-btn"),scorePercent:document.getElementById("score-percent"),scoreMessage:document.getElementById("score-message"),correctAnswers:document.getElementById("correct-answers"),wrongAnswers:document.getElementById("wrong-answers"),timeTaken:document.getElementById("time-taken"),reviewButton:document.getElementById("review-btn"),restartButton:document.getElementById("restart-btn"),backToResults:document.getElementById("back-to-results"),reviewQuestions:document.getElementById("review-questions"),hintModal:document.getElementById("hint-modal"),hintText:document.getElementById("hint-text"),closeModal:document.querySelector(".close-modal"),correctSound:document.getElementById("correct-sound"),wrongSound:document.getElementById("wrong-sound"),timerSound:document.getElementById("timer-sound"),themeToggle:document.getElementById("theme-toggle"),soundToggle:document.getElementById("sound-toggle"),categoriesGrid:document.getElementById("categories-grid"),categorySearch:document.getElementById("category-search"),clearSearch:document.getElementById("clear-search"),noResults:document.getElementById("no-results"),adminBtn:document.getElementById("admin-btn"),settingsModal:document.getElementById("settings-modal"),questionsCount:document.getElementById("questions-count"),customQuestions:document.getElementById("custom-questions"),timerSetting:document.getElementById("timer-setting"),availableCount:document.getElementById("available-count"),startQuizBtn:document.getElementById("start-quiz"),cancelSettings:document.getElementById("cancel-settings"),closeSettings:document.querySelector(".close-settings"),exitQuiz:document.getElementById("exit-quiz"),homeBtn:document.getElementById("home-btn"),exitModal:document.getElementById("exit-modal"),confirmExit:document.getElementById("confirm-exit"),cancelExit:document.getElementById("cancel-exit")},state={currentCategory:null,questions:[],currentQuestionIndex:0,score:0,userAnswers:[],timer:null,timeLeft:30,startTime:0,endTime:0,darkMode:"true"===localStorage.getItem("darkMode"),soundEnabled:"false"!==localStorage.getItem("soundEnabled"),categories:{},questionsData:{},questionsPerQuiz:10,timerDuration:30,isTimerEnabled:!0,selectedCategory:null};class QuizDataManager{constructor(){this.storageKey="brainyquiz-data"}async loadData(){try{let localCategories={},localQuestions={};const savedData=localStorage.getItem(this.storageKey);if(savedData){const data=JSON.parse(savedData);localCategories=data.categories||{},localQuestions=data.questions||{}}const categoriesResponse=await fetch("./data/categories.json");if(!categoriesResponse.ok)throw new Error(`Categories file not found: ${categoriesResponse.status}`);let fileCategories=await categoriesResponse.json();fileCategories.encoded&&(fileCategories=JSON.parse(atob(fileCategories.data)),delete fileCategories.watermark);const fileQuestions={},categoryKeys=Object.keys(fileCategories);for(const categoryKey of categoryKeys)try{const filename=categoryKey.replace(/\s+/g,""),questionsResponse=await fetch(`./data/questions/${filename}.json`);if(questionsResponse.ok){let questions=await questionsResponse.json();questions.encoded&&(questions=JSON.parse(atob(questions.data)),delete questions.watermark),fileQuestions[categoryKey]=questions}else fileQuestions[categoryKey]=[]}catch(error){fileQuestions[categoryKey]=[]}state.categories={...fileCategories,...localCategories},state.questionsData={...fileQuestions,...localQuestions}}catch(error){state.categories={},state.questionsData={},alert("Error loading quiz data: "+error.message)}}saveData(){const data={categories:state.categories,questions:state.questionsData,lastUpdated:(new Date).toISOString()};localStorage.setItem(this.storageKey,JSON.stringify(data))}}const dataManager=new QuizDataManager;function hideAllScreens(){[elements.loadingScreen,elements.categoryScreen,elements.quizScreen,elements.resultsScreen,elements.reviewScreen].forEach(screen=>{screen&&screen.classList.remove("active")})}async function init(){if(setTheme(state.darkMode),setSound(state.soundEnabled),elements.quizScreen)try{await dataManager.loadData(),setupEventListeners(),renderCategories(),setTimeout(()=>{hideAllScreens(),elements.categoryScreen.classList.add("active")},1e3)}catch(error){alert("Failed to load quiz data. Please check your data files. Error: "+error.message)}else alert("Error: Quiz screen element missing in HTML. Please check the markup.")}function setupEventListeners(){elements.categorySearch.addEventListener("input",debounce(handleSearch,300)),elements.clearSearch.addEventListener("click",clearSearch),document.addEventListener("keydown",handleKeyboardShortcuts),elements.nextButton.addEventListener("click",nextQuestion),elements.hintButton.addEventListener("click",showHint),elements.closeModal.addEventListener("click",closeModal),elements.hintModal.addEventListener("click",e=>{e.target===elements.hintModal&&closeModal()}),elements.reviewButton.addEventListener("click",showReview),elements.restartButton.addEventListener("click",restartQuiz),elements.backToResults.addEventListener("click",()=>{hideAllScreens(),elements.resultsScreen.classList.add("active")}),elements.themeToggle.addEventListener("click",toggleTheme),elements.soundToggle.addEventListener("click",toggleSound),elements.adminBtn&&elements.adminBtn.addEventListener("click",()=>{window.location.href="admin.html"}),elements.questionsCount.addEventListener("change",handleQuestionsCountChange),elements.customQuestions.addEventListener("input",handleCustomQuestionsInput),elements.timerSetting.addEventListener("change",handleTimerSettingChange),elements.startQuizBtn.addEventListener("click",startQuizFromModal),elements.cancelSettings.addEventListener("click",closeSettingsModal),elements.closeSettings.addEventListener("click",closeSettingsModal),elements.settingsModal.addEventListener("click",e=>{e.target===elements.settingsModal&&closeSettingsModal()}),elements.exitQuiz.addEventListener("click",showExitConfirmation),elements.homeBtn.addEventListener("click",goToHome),elements.confirmExit.addEventListener("click",confirmExitQuiz),elements.cancelExit.addEventListener("click",cancelExitQuiz)}function renderCategories(filteredCategories=null){const categoriesToRender=filteredCategories||Object.keys(state.categories);if(elements.categoriesGrid.innerHTML="",!document.getElementById("category-counter")){const categoryCounter=document.createElement("div");categoryCounter.id="category-counter",categoryCounter.className="category-counter",elements.categoriesGrid.parentNode.insertBefore(categoryCounter,elements.categoriesGrid)}if(document.getElementById("category-counter").textContent=`Showing ${categoriesToRender.length} of ${Object.keys(state.categories).length} categories`,0===categoriesToRender.length)return elements.noResults.style.display="block",void(elements.categoriesGrid.style.display="none");elements.noResults.style.display="none",elements.categoriesGrid.style.display="grid",categoriesToRender.forEach(categoryKey=>{const categoryCard=createCategoryCard(categoryKey,state.categories[categoryKey]);elements.categoriesGrid.appendChild(categoryCard)})}function createCategoryCard(categoryKey,category){const card=document.createElement("div");card.className="category-card",card.dataset.category=categoryKey;const questionCount=state.questionsData[categoryKey]?.length||0;return card.innerHTML=`\n        <div class="category-icon" style="background: ${category.color}20; color: ${category.color}">\n            <i class="fas ${category.icon}"></i>\n        </div>\n        <h3>${category.name}</h3>\n        <p>${questionCount} questions available</p>\n        <div class="category-badge">${categoryKey}</div>\n    `,card.addEventListener("click",()=>showSettingsModal(categoryKey)),card}function showSettingsModal(categoryKey){if(!state.categories[categoryKey])return void alert("Selected category is invalid. Please try another category.");state.selectedCategory=categoryKey;const available=state.questionsData[categoryKey]?.length||0,displayCount=Math.min(state.questionsPerQuiz,available);elements.availableCount.textContent=`${displayCount} questions available (max ${available})`,elements.settingsModal.classList.add("active")}function closeSettingsModal(){elements.settingsModal.classList.remove("active")}function handleQuestionsCountChange(){const value=elements.questionsCount.value;"custom"===value?(elements.customQuestions.style.display="block",elements.customQuestions.focus()):(elements.customQuestions.style.display="none",state.questionsPerQuiz=parseInt(value),updateAvailableQuestions())}function handleCustomQuestionsInput(){const value=parseInt(elements.customQuestions.value);value&&value>0&&value<=50&&(state.questionsPerQuiz=value,updateAvailableQuestions())}function handleTimerSettingChange(){const value=parseInt(elements.timerSetting.value);state.timerDuration=value,state.isTimerEnabled=value>0}function updateAvailableQuestions(){if(state.selectedCategory){const available=state.questionsData[state.selectedCategory]?.length||0,displayCount=Math.min(state.questionsPerQuiz,available);elements.availableCount.textContent=`${displayCount} questions available (max ${available})`}}function startQuizFromModal(){if(!state.selectedCategory)return void alert("Please select a category to start the quiz.");const selectedCategory=state.selectedCategory;closeSettingsModal(),hideAllScreens(),elements.loadingScreen.classList.add("active"),selectCategory(selectedCategory)}async function selectCategory(category){if(!state.categories[category])return alert("Invalid category selected. Please try again."),hideAllScreens(),void elements.categoryScreen.classList.add("active");state.currentCategory=category;try{let questions=state.questionsData[category]||[];if(0===questions.length)return alert("No questions available for this category yet. Please try another category."),hideAllScreens(),void elements.categoryScreen.classList.add("active");questions=shuffleArray(questions);const maxQuestions=Math.min(state.questionsPerQuiz,questions.length);if(questions.length>maxQuestions&&(questions=questions.slice(0,maxQuestions)),state.questions=questions,state.currentQuestionIndex=0,state.score=0,state.userAnswers=new Array(state.questions.length).fill(null),state.timeLeft=state.timerDuration,hideAllScreens(),!elements.quizScreen)return alert("Error: Quiz screen not found. Please check the HTML."),void elements.categoryScreen.classList.add("active");elements.quizScreen.classList.add("active"),startQuiz()}catch(error){alert("Failed to load questions. Please try again later."),hideAllScreens(),elements.categoryScreen.classList.add("active")}}function shuffleArray(array){const newArray=[...array];for(let i=newArray.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[newArray[i],newArray[j]]=[newArray[j],newArray[i]]}return newArray}function startQuiz(){state.startTime=Date.now(),showQuestion(),state.isTimerEnabled?startTimer():(elements.timerDisplay.style.display="none",document.querySelector(".quiz-timer i").style.display="none")}function showQuestion(){const question=state.questions[state.currentQuestionIndex],progress=state.currentQuestionIndex/state.questions.length*100;elements.progressBar.style.width=`${progress}%`,elements.questionNumber.textContent=`Q${state.currentQuestionIndex+1}/${state.questions.length}`,elements.categoryName.textContent=state.categories[state.currentCategory].name,elements.questionText.textContent=question.question,elements.optionsContainer.innerHTML="";const shuffledOptions=shuffleArray([...question.options]),correctAnswerIndex=shuffledOptions.indexOf(question.options[question.answer]);shuffledOptions.forEach((option,index)=>{const optionElement=document.createElement("div");optionElement.className="option",optionElement.textContent=option,optionElement.dataset.answer=index,optionElement.dataset.correctIndex=correctAnswerIndex,state.userAnswers[state.currentQuestionIndex]===index&&optionElement.classList.add("selected"),optionElement.addEventListener("click",selectAnswer),elements.optionsContainer.appendChild(optionElement)}),state.isTimerEnabled&&resetTimer(),elements.nextButton.disabled=null===state.userAnswers[state.currentQuestionIndex],elements.nextButton.classList.toggle("disabled",null===state.userAnswers[state.currentQuestionIndex])}function selectAnswer(e){const selectedOption=e.target,selectedAnswer=parseInt(selectedOption.dataset.answer);document.querySelectorAll(".option").forEach(opt=>{opt.classList.remove("selected")}),selectedOption.classList.add("selected"),state.userAnswers[state.currentQuestionIndex]=selectedAnswer,elements.nextButton.disabled=!1,elements.nextButton.classList.remove("disabled")}function nextQuestion(){state.questions[state.currentQuestionIndex];const userAnswer=state.userAnswers[state.currentQuestionIndex],optionsElements=document.querySelectorAll(".option");userAnswer===parseInt(optionsElements[0].dataset.correctIndex)?(state.score+=1,state.soundEnabled&&(elements.correctSound.currentTime=0,elements.correctSound.play())):state.soundEnabled&&(elements.wrongSound.currentTime=0,elements.wrongSound.play()),state.currentQuestionIndex<state.questions.length-1?(state.currentQuestionIndex++,showQuestion()):finishQuiz()}function startTimer(){clearInterval(state.timer),state.timeLeft=state.timerDuration,updateTimerDisplay(),state.timer=setInterval(()=>{state.timeLeft--,updateTimerDisplay(),state.timeLeft<=5&&state.soundEnabled&&(elements.timerSound.currentTime=0,elements.timerSound.play()),state.timeLeft<=0&&(clearInterval(state.timer),handleTimeOut())},1e3)}function resetTimer(){clearInterval(state.timer),state.timeLeft=state.timerDuration,updateTimerDisplay(),state.isTimerEnabled&&startTimer()}function updateTimerDisplay(){elements.timerDisplay.textContent=state.timeLeft,state.timeLeft<=10?elements.timerDisplay.style.color="var(--danger-color)":elements.timerDisplay.style.color="inherit"}function handleTimeOut(){null===state.userAnswers[state.currentQuestionIndex]&&(state.userAnswers[state.currentQuestionIndex]=-1),state.currentQuestionIndex<state.questions.length-1?(state.currentQuestionIndex++,showQuestion()):finishQuiz()}function finishQuiz(){clearInterval(state.timer),state.endTime=Date.now(),calculateResults(),hideAllScreens(),elements.resultsScreen.classList.add("active"),elements.timerDisplay.style.display="block",document.querySelector(".quiz-timer i").style.display="inline-block",state.score>=.8*state.questions.length&&startConfetti(3e3)}function calculateResults(){const totalQuestions=state.questions.length,percentage=Math.round(state.score/totalQuestions*100),timeSpent=Math.floor((state.endTime-state.startTime)/1e3);elements.scorePercent.textContent=`${percentage}%`,elements.correctAnswers.textContent=state.score,elements.wrongAnswers.textContent=totalQuestions-state.score,elements.timeTaken.textContent=`${timeSpent}s`,elements.scoreMessage.textContent=percentage>=90?"Excellent!":percentage>=70?"Great Job!":percentage>=50?"Good Effort!":"Keep Practicing!";const circle=document.querySelector(".score-circle-fill"),circumference=2*Math.PI*54,offset=circumference-percentage/100*circumference;circle.style.strokeDasharray=`${circumference} ${circumference}`,circle.style.strokeDashoffset=circumference,circle.style.stroke=getScoreColor(percentage),setTimeout(()=>{circle.style.strokeDashoffset=offset},100)}function getScoreColor(percentage){return percentage>=90?"var(--success-color)":percentage>=70?"var(--primary-color)":percentage>=50?"var(--warning-color)":"var(--danger-color)"}function showHint(){const currentQuestion=state.questions[state.currentQuestionIndex];elements.hintText.textContent=currentQuestion.hint||"No hint available for this question.",elements.hintModal.classList.add("active")}function closeModal(){elements.hintModal.classList.remove("active")}function showReview(){hideAllScreens(),elements.reviewScreen.classList.add("active"),elements.reviewQuestions.innerHTML="",state.questions.forEach((question,index)=>{const userAnswer=state.userAnswers[index],isCorrect=userAnswer===question.answer,reviewItem=document.createElement("div");reviewItem.className="review-item";const questionElement=document.createElement("div");questionElement.className="review-question",questionElement.textContent=`${index+1}. ${question.question}`,reviewItem.appendChild(questionElement);const correctAnswer=document.createElement("div");if(correctAnswer.className="review-answer correct",correctAnswer.innerHTML=`<i class="fas fa-check"></i> ${question.options[question.answer]}`,reviewItem.appendChild(correctAnswer),!isCorrect&&-1!==userAnswer){const userAnswerElement=document.createElement("div");userAnswerElement.className="review-answer wrong",userAnswerElement.innerHTML=`<i class="fas fa-times"></i> ${question.options[userAnswer]}`,reviewItem.appendChild(userAnswerElement)}if(question.hint&&(!isCorrect||-1===userAnswer)){const hintElement=document.createElement("div");hintElement.className="review-hint",hintElement.innerHTML=`<i class="fas fa-lightbulb"></i> ${question.hint}`,reviewItem.appendChild(hintElement)}elements.reviewQuestions.appendChild(reviewItem)})}function showExitConfirmation(){elements.exitModal.classList.add("active")}function cancelExitQuiz(){elements.exitModal.classList.remove("active")}function confirmExitQuiz(){clearInterval(state.timer),elements.exitModal.classList.remove("active"),hideAllScreens(),elements.categoryScreen.classList.add("active"),elements.timerDisplay.style.display="block",document.querySelector(".quiz-timer i").style.display="inline-block"}function goToHome(){hideAllScreens(),elements.categoryScreen.classList.add("active")}function restartQuiz(){hideAllScreens(),showSettingsModal(state.currentCategory)}function handleSearch(){const searchTerm=elements.categorySearch.value.toLowerCase().trim();if(!searchTerm)return void renderCategories();renderCategories(Object.keys(state.categories).filter(categoryKey=>state.categories[categoryKey].name.toLowerCase().includes(searchTerm)||categoryKey.toLowerCase().includes(searchTerm)))}function clearSearch(){elements.categorySearch.value="",elements.categorySearch.focus(),renderCategories()}function handleKeyboardShortcuts(e){(e.ctrlKey||e.metaKey)&&"k"===e.key&&(e.preventDefault(),elements.categorySearch.focus()),"Escape"===e.key&&document.activeElement===elements.categorySearch&&clearSearch()}function setTheme(isDark){document.documentElement.setAttribute("data-theme",isDark?"dark":"light"),elements.themeToggle.innerHTML=isDark?'<i class="fas fa-sun"></i>':'<i class="fas fa-moon"></i>',localStorage.setItem("darkMode",isDark)}function setSound(isEnabled){elements.soundToggle.innerHTML=isEnabled?'<i class="fas fa-volume-up"></i>':'<i class="fas fa-volume-mute"></i>',localStorage.setItem("soundEnabled",isEnabled)}function toggleTheme(){state.darkMode=!state.darkMode,setTheme(state.darkMode)}function toggleSound(){state.soundEnabled=!state.soundEnabled,setSound(state.soundEnabled)}function debounce(func,wait){let timeout;return function(...args){clearTimeout(timeout),timeout=setTimeout(()=>{clearTimeout(timeout),func(...args)},wait)}}document.addEventListener("DOMContentLoaded",init);